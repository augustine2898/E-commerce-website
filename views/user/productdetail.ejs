<%- include("../partials/user/header") %>

  <div class="product-detailed-page">
    <!-- Breadcrumbs -->
    <nav class="breadcrumbs">
      <a href="/">Home</a> /
      <a href="/category/<%= product.category._id %>">
        <%= product.category.name %>
      </a> / <%= product.productName %>
    </nav>

    <div class="product-details-container">
      <!-- Image Gallery Section -->
      <div class="image-gallery-section">
        <div id="carouselExampleControls" data-ride="carousel">
          <div class="carousel-inner">
            <% for (let i=0; i < product.productImage.length; i++) { %>
              <div class="carousel-item <%= i === 0 ? 'active' : '' %>"
                style="--url: url('/uploads/product-image/<%= product.productImage[i] %>'); --zoom-x: 0%; --zoom-y: 0%; --display: none;">
                <div class="image-zoom-container">
                  <img class="d-block w-100" src="/uploads/product-image/<%= product.productImage[i] %>"
                    alt="Slide <%= i + 1 %>">
                </div>
              </div>
              <% } %>
                <a class="carousel-control-prev" href="#carouselExampleControls" onclick="prevImage()" role="button"
                  data-slide="prev">
                  <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                  <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleControls" onclick="nextImage()" role="button"
                  data-slide="next">
                  <span class="carousel-control-next-icon" aria-hidden="true"></span>
                  <span class="sr-only">Next</span>
                </a>
          </div>

        </div>
        <div class="thumbnails">
          <thumbnails>
            <% for (let i=0; i < product.productImage.length; i++) { %>
              <img src="/uploads/product-image/<%= product.productImage[i] %>" class="thumbnail" alt="Product Thumbnail"
                onclick="changeImage(<%= i %>)" />
              <% } %>

        </div>
      </div>

      <!-- Product Info Section -->
      <div class="product-info-section">
        <h1 class="product-title">
          <%= product.productName %>
        </h1>
        <div class="rating" onclick="scrollToReviews()">
          <span>
            <%= averageRating.toFixed(1) %>
          </span> ⭐ | <%= reviews.length %> Reviews
        </div>
        <div class="price-section">
          <% if (product.salePrice && product.regularPrice> product.salePrice) { %>
            <span class="discounted-price">₹<%= product.salePrice %></span>
            <span class="original-price">₹<%= product.regularPrice %></span>
            <span class="discount-percentage">
              <%= ((product.regularPrice - product.salePrice) / product.regularPrice * 100).toFixed(0) %>% off
            </span>
            <% } else { %>
              <span class="regular-price">₹<%= product.regularPrice %></span>
              <% } %>
        </div>
        <div class="availability">
          <% if (product.status === 'Available') { %>
              <span class="in-stock">In Stock</span>
              <span class="quantity-info">Quantity Available: <%= product.quantity %></span>
          <% } else if (product.status === 'Out of Stock') { %>
              <span class="out-of-stock">Out of Stock</span>
          <% } else if (product.status === 'Discontinued') { %>
              <span class="discontinued">This product has been discontinued.</span>
          <% } %>
      </div>
      


        <!-- Add to Cart Section -->
        <div class="quantity">
          <button class="minus" aria-label="Decrease">&minus;</button>
          <input type="number" class="input-box" value="1" min="1" max="10">
          <button class="plus" aria-label="Increase">&plus;</button>
        </div>

        <div class="add-to-cart-section">
          <button class="wishlist-btn">Add to Wishlist</button>
          <button class="cart-btn" data-product-id="<%= product._id %>">Add to Cart</button>

        </div>

        <!-- Product Description -->
        <div class="product-description">
          <h2>Description</h2>
          <p>
            <%=productDescription %>
          </p>
        </div>
      </div>
    </div>
  </div>

  <!-- Related Products -->
  <div class="untree_co-section product-section before-footer-section">
    <div class="container">
      <div class="row">
        <div class="col-lg-12">
          <h2 class="mb-4 section-title text-center">Related Products</h2>
        </div>
      </div>
      <div class="row_product__filter">
        <% if (relatedProducts.length> 0) { %>
          <% relatedProducts.forEach(product=> { %>
            <div class="col-12 col-md-4 col-lg-3 mb-5">
              <div class="product-card">
                <a href="/productDetails?id=<%= product._id %>">
                  <img src="/uploads/product-image/<%= product.productImage[0] %>" class="product-image"
                    alt="<%= product.productName %>">
                </a>
                <div class="product-info">
                  <h3>
                    <%= product.productName %>
                  </h3>
                  <div class="price-section">
                    <% if (product.salePrice && product.regularPrice> product.salePrice) { %>
                      <span class="original-price">₹<%= product.regularPrice %></span>
                      <span class="discounted-price">₹<%= product.salePrice %></span>
                      <span class="discount-percentage">(<%= ((product.regularPrice - product.salePrice) /
                          product.regularPrice * 100).toFixed(0) %>% OFF)</span>
                      <% } else { %>
                        <span class="regular-price fw-bold">₹<%= product.regularPrice %></span>
                        <% } %>
                  </div>
                  <div class="button-group">
                    <button class="cart-btn" data-product-id="<%= product._id %>">Add to Cart</button>
                    <button class="wishlist-btn" data-id="<%= product._id %>" data-filled="false">Add to
                      Wishlist</button>
                  </div>
                </div>
              </div>
            </div>
            <% }) %>
              <% } else { %>
                <div class="col-12 text-center">
                  <p>No related products found.</p>
                </div>
                <% } %>
      </div>
    </div>
  </div>

  <!-- Reviews Section -->
  <div class="reviews-section" id="customer-reviews">
    <h2>Customer Reviews</h2>
    <div class="existing-reviews">
      <% reviews.forEach(review=> { %>
        <div class="review-card">
          <div class="review-rating">
            <span>
              <%= '⭐' .repeat(review.rating) %>
            </span>
            <span>
              <%= review.user ? review.user.name : 'Anonymous' %> <!-- Display 'Anonymous' if user is null -->
            </span>
          </div>
          <div class="review-content">
            <p>
              <%= review.comment %>
            </p>
          </div>
          <div class="review-date">
            <small>Reviewed on <%= new Date(review.createdAt).toLocaleDateString() %></small>
          </div>
          <% if (user && review.user && review.user._id.toString()===user._id.toString()) { %>
            <form action="/deleteReview/<%= review._id %>" method="POST" style="display: inline;">
              <i class="fas fa-trash-alt" title="Delete Review" style="cursor: pointer;"
                onclick="this.closest('form').submit();"></i>
            </form>
            <% } %>
        </div>
        <% }) %>
          <% if (reviews.length===0) { %>
            <p>No reviews yet. Be the first to review this product!</p>
            <% } %>
    </div>

    <!-- Review Form -->
    <div class="review-form">
      <h3>Submit Your Review</h3>
      <form action="/productDetails/review/<%= product._id %>" method="POST" id="reviewForm">
        <div class="rating-input">
          <label for="rating">Rating:</label>
          <select name="rating" id="rating" required>
            <option value="">Select Rating</option>
            <option value="1">1 Star</option>
            <option value="2">2 Stars</option>
            <option value="3">3 Stars</option>
            <option value="4">4 Stars</option>
            <option value="5">5 Stars</option>
          </select>
        </div>
        <div class="comment-input">
          <label for="comment">Your Review:</label>
          <textarea name="comment" id="comment" rows="4" required></textarea>
        </div>
        <button type="submit" class="submit-review-button">Submit Review</button>
      </form>
    </div>
  </div>



  </div>
  <%- include("../partials/user/footer") %>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="/js/usersideimagezoom.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script> document.addEventListener("DOMContentLoaded", function () {
        const quantityContainer = document.querySelector(".quantity");
        const minusBtn = quantityContainer.querySelector(".minus");
        const plusBtn = quantityContainer.querySelector(".plus");
        const inputBox = quantityContainer.querySelector(".input-box");

        function updateButtonStates() {
          const value = parseInt(inputBox.value);
          minusBtn.disabled = value <= 1;
          plusBtn.disabled = value >= parseInt(inputBox.max);
        }

        function decreaseValue() {
          let value = parseInt(inputBox.value);
          value = isNaN(value) ? 1 : Math.max(value - 1, 1);
          inputBox.value = value;
          updateButtonStates();
          console.log('Quantity decreased: ', value);
        }

        function increaseValue() {
          let value = parseInt(inputBox.value);
          value = isNaN(value) ? 1 : Math.min(value + 1, parseInt(inputBox.max));
          inputBox.value = value;
          updateButtonStates();
          console.log('Quantity increased: ', value);
        }

        minusBtn.addEventListener("click", decreaseValue);
        plusBtn.addEventListener("click", increaseValue);

        updateButtonStates();
      });
    </script>
    <script>
      function scrollToReviews() {
        const reviewsSection = document.getElementById('customer-reviews');
        if (reviewsSection) {
          reviewsSection.scrollIntoView({ behavior: 'smooth' });
        }
      }

      const images = <% -JSON.stringify(product.productImage) %>;
      let currentImageIndex = 0;


      function changeImage(index) {
        const mainImage = document.querySelector('.carousel-inner .active img');
        const newImageSrc = `/uploads/product-image/${images[index]}`;
        mainImage.src = newImageSrc;
      }

      function nextImage() {
        currentImageIndex = (currentImageIndex + 1) % images.length;
        changeImage(currentImageIndex); // Call changeImage to update image
      }

      function prevImage() {
        currentImageIndex = (currentImageIndex - 1 + images.length) % images.length;
        changeImage(currentImageIndex); // Call changeImage to update image
      }

    </script>

    <script>
     document.querySelectorAll('.cart-btn').forEach(button => {
  button.addEventListener('click', async (event) => {
    const productId = event.target.getAttribute('data-product-id');

    // Try to find the quantity input box within the product info section
    const quantityInput = event.target.closest('.product-info-section')?.querySelector('.input-box');
    
    let quantity = 1; // Default quantity

    if (quantityInput) {
      // If the quantity input exists, use the value from the input
      quantity = parseInt(quantityInput.value) || 1; // Ensure it's a number, default to 1 if not
    }

    // Check if the quantity is zero
    if (quantity === 0) {
      Swal.fire('Out of Stock', 'Sorry, this product is out of stock.', 'error');
      return; // Prevent further actions if quantity is zero
    }

    // Check if the user is logged in (assuming user session is stored in a variable or cookie)
    const userIsLoggedIn = Boolean(<%= user ? 'true' : 'false' %>); // Adjust this to your session/user check

    if (!userIsLoggedIn) {
      Swal.fire({
        title: 'Please Log In',
        text: 'You must be logged in to add items to your cart.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Log In',
        cancelButtonText: 'Cancel',
      }).then((result) => {
        if (result.isConfirmed) {
          window.location.href = '/login'; // Redirect to login page
        }
      });
      return; // Prevent further actions if the user is not logged in
    }

    // Send request to add product to cart
    try {
      const response = await fetch('/cart/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId, quantity }), // Send both productId and quantity
      });

      // Check if the response was successful
      if (response.ok) {
        const data = await response.json();
        if (data.message === 'Product added to cart') {
          Swal.fire('Success', data.message, 'success');
        } else {
          Swal.fire('Error', 'Something went wrong. Please try again.', 'error');
        }
      } else {
        // If the response is not OK, assume it's an error and display the message
        const data = await response.json();
        Swal.fire('Error', data.message || 'Failed to add product to cart. Please try again.', 'error');
      }
    } catch (error) {
      console.error('Error:', error);
      Swal.fire('Error', 'Failed to add product to cart. Please try again.', 'error');
    }
  });
});

    </script>

    <style>
      .image-zoom-container {
        width: 100%;
        height: 100%;
        position: relative;
        overflow: hidden;
        /* To prevent overflow of zoom effect */
      }

      .image-zoom-container img {
        height: 400px;
        object-fit: cover;
        object-position: center;
        /* Center the image */
      }

      .image-zoom-container::after {
        opacity: 0;
        /* Start hidden */
        content: '';
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        /* Optional: dark overlay */
        background-image: var(--url);
        background-size: 200%;
        background-position: var(--zoom-x) var(--zoom-y);
        position: absolute;
        left: 0;
        top: 0;
        transition: opacity 0.3s ease;
        /* Smooth fade-in/fade-out transition */
      }

      .image-zoom-container:hover::after {
        opacity: 1;
        /* Show zoom effect on hover */
      }
    </style>

    <style>
      /* General Styling */
      body {
        font-family: 'Helvetica Neue', Arial, sans-serif;
        background-color: #ffffff;
        color: #333;
        line-height: 1.6;
      }

      /* Breadcrumbs */
      .breadcrumbs {
        margin: 20px;
        font-size: 14px;
        font-weight: 500;
      }

      .breadcrumbs a {
        color: #007bff;
        text-decoration: none;
      }

      .breadcrumbs a:hover {
        text-decoration: underline;
      }

      /* Product Detailed Page */
      .product-detailed-page {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }

      /* Flexbox Layout for Details Section */
      .product-details-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 40px;
      }

      .image-gallery-section {
        flex: 1;
        margin-right: 20px;
        min-width: 300px;
        max-width: 100%;
      }

      .image-gallery-section img {
        width: 100%;
        max-height: 400px;
        object-fit: cover;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      }

      .thumbnails {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
      }

      .thumbnails img {
        width: 80px;
        cursor: pointer;
        border-radius: 5px;
        transition: transform 0.2s;
      }

      .thumbnails img:hover {
        transform: scale(1.1);
        border: 2px solid #007bff;
      }

      .carousel-control-prev,
      .carousel-control-next {
        width: 5%;
        /* or adjust based on your design */
        opacity: 1;
        /* Ensures they are fully visible */
        /* Additional styles */
      }

      .carousel-control-prev-icon,
      .carousel-control-next-icon {
        background-color: rgba(0, 0, 0, 0.5);
        /* Visible background for icons */
        border-radius: 50%;
        /* Round shape */
      }

      /* Use flex properties to position correctly */
      .carousel-control-prev {
        left: 10px;
        /* Adjust as necessary */
      }

      .carousel-control-next {
        right: 10px;
        /* Adjust as necessary */
      }


      .product-info-section {
        flex: 1;
        min-width: 300px;
      }

      .product-info-section h1 {
        font-size: 28px;
        margin-bottom: 10px;
        font-weight: bold;
        color: #333;
      }

      /* Responsive Text Size */
      @media (max-width: 768px) {
        .product-info-section h1 {
          font-size: 22px;
        }

        .product-info-section {
          margin: 20px 0;
          /* Add spacing for mobile view */
        }

        .image-gallery-section {
          margin-right: 0;
          /* Remove margin for smaller screens */
        }

        .thumbnails img {
          width: 60px;
          /* Smaller thumbnail size for mobile */
        }
      }

      .rating {
        font-size: 16px;
        color: #ff9900;
        margin-bottom: 10px;
      }

      .price-section {
        font-size: 24px;
        color: #e74c3c;
        margin: 10px 0;
      }

      /* Discount and Price Styling */
      .discounted-price {
        font-weight: bold;
      }

      .original-price {
        text-decoration: line-through;
        margin-left: 10px;
        color: #888;
      }

      .discount-percentage {
        font-weight: bold;
        color: green;
        margin-left: 10px;
      }

      .availability {
        margin: 10px 0;
      }

      .regular-price {

        color: #000000;
      }

      .in-stock {
        color: green;
      }

      .out-of-stock {
        color: red;
      }

      .discontinued {
        color: orange;
      }

      .color-selection {
        margin: 10px 0;
      }

      .add-to-cart-section {
        margin: 20px 0;
      }

      .quantity button {
        background-color: #3498db;
        color: #fff;
        border: none;
        cursor: pointer;
        font-size: 20px;
        width: 30px;
        height: auto;
        text-align: center;
        transition: background-color 0.2s;
      }

      .quantity button:hover {
        background-color: #2980b9;
      }

      .input-box {
        width: 40px;
        text-align: center;
        border: none;
        padding: 8px 10px;
        font-size: 16px;
        outline: none;
      }

      /* Hide the number input spin buttons */
      .input-box::-webkit-inner-spin-button,
      .input-box::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      .input-box[type="number"] {
        -moz-appearance: textfield;
      }


      .product-description {
        margin-top: 20px;
      }

      .product-description h2 {
        font-size: 24px;
        margin-bottom: 10px;
      }

      .product-card {
        max-width: 98%;

      }

      /* Related products */
      .row_product__filter {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-evenly;

      }

      .product-card {
        display: flex;
        margin: 4px;
        flex-direction: column;
        justify-content: space-between;
        min-height: 400px;
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        background-color: #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
      }

      .product-image {
        height: 190px;

        width: 100%;
        object-fit: cover;
      }

      .product-info {
        padding: 15px;
      }

      h3 {
        font-size: x-large;
        text-align: center;
      }

      .price-section {
        display: flex;
        align-items: center;
        font-size: 20px;
        color: #e74c3c;
        margin: 10px 0;
      }

      .discounted-price {
        font-weight: bold;
        margin-right: 10px;
      }

      .original-price {
        text-decoration: line-through;
        margin-right: 10px;
        color: #888;
        font-size: 16px;
      }

      .discount-percentage {
        margin-right: 15px;
        font-weight: bold;
        font-size: 15px;
        color: green;
      }

      .row_product__filter .regular-price {
        margin-left: 100px;
        color: #000000;
      }

      .wishlist-btn {
        margin-top: auto;
        padding: 8px 20px;
        font-size: 14px;
        background-color: #3b5d50;
        border: none;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        transition: background-color 0.3s ease;
        align-self: center;
      }

      .cart-btn {
        margin-top: auto;
        padding: 8px 35px;
        font-size: 14px;
        background-color: #0275d8;
        border: none;
        border-radius: 5px;
        color: #fff;
        cursor: pointer;
        transition: background-color 0.3s ease;
        align-self: center;
      }

      .wishlist-btn:hover,
      .cart-btn:hover {
        background-color: #025aa5;
      }

      /* Media queries for smaller screens */
      @media (max-width: 600px) {
        .product-card {
          max-width: 100%;
        }

        h3 {
          font-size: 16px;
        }

        .price-section {
          flex-direction: column;
        }

        .original-price,
        .discount {
          margin-left: 0;
        }
      }

      /* Additional Media Query for further improvements on small devices */
      @media (max-width: 480px) {
        .product-details-container {
          flex-direction: column;
          /* Stack the sections vertically */
        }

        .image-gallery-section,
        .product-info-section {
          margin-right: 0;
          /* Remove right margin */
          margin-bottom: 20px;
          /* Add bottom margin for spacing */
        }

        .thumbnails img {
          width: 50px;
          /* Further reduce thumbnail size */
        }
      }

      .reviews-section {
        margin-top: 40px;
        padding: 40px;

      }

      .existing-reviews {
        margin-bottom: 20px;
      }

      .review-card {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 15px;
        margin-bottom: 10px;
        background-color: #f9f9f9;
      }

      .review-rating span {
        font-size: 16px;
        color: #ff9900;
        /* Gold color for stars */
      }

      .review-content p {
        margin: 10px 0;
        font-size: 16px;
        color: #333;
      }

      .review-date small {
        font-size: 12px;
        color: #888;
      }

      .review-form {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 20px;
        background-color: #fff;
      }

      .review-form h3 {
        margin-bottom: 10px;
      }

      .rating-input,
      .comment-input {
        margin-bottom: 15px;
      }

      .rating-input label,
      .comment-input label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
      }

      .comment-input textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
      }

      .submit-review-button {
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
      }

      .submit-review-button:hover {
        background-color: #0056b3;
      }

      .before-footer-section {
        padding: 0rem 0 12rem 0 !important;
      }
    </style>