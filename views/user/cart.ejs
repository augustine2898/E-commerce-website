<%- include("../partials/user/header") %>
<style>
    .bi-trash {
        border: none;
        background: none;
        cursor: pointer;
    }

    .bi-trash:hover {
        color: red; 
    }

    .form-control {
    height: 55px;
    border-radius: 10px;
    font-family: "Inter", sans-serif;
}
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.5/font/bootstrap-icons.min.css">

<div class="hero">
    <div class="container">
        <div class="row justify-content-between">
            <div class="col-lg-5">
                <div class="intro-excerpt">
                    <h1>Cart</h1>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="untree_co-section before-footer-section">
    <div class="container">
        <% if (cart.items.length === 0) { %>
            <div class="d-flex flex-column justify-content-center align-items-center" style="height: 70vh;">
                <h1>Your Cart</h1>
                <p>Your cart is empty.</p>
                <a href="/shop" class="btn btn-primary">Continue Shopping</a>
            </div>
        <% } else { %>
            <form id="updateCartForm">
                <div class="site-blocks-table">
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="product-thumbnail">Image</th>
                                <th class="product-name">Product</th>
                                <th class="product-offer">Offer</th> <!-- Added Offer Column -->
                                <th class="product-price">Price</th>
                                <th class="product-quantity">Quantity</th>
                                <th class="product-total">Total</th>
                                <th class="product-remove">Remove</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cart.items.forEach(item => { %>
                                <tr data-itemid="<%= item._id %>">
                                    <td class="product-thumbnail">
                                        <a href="/productDetails?id=<%= item.productId._id %>">
                                            <img src="/uploads/product-image/resized/<%= item.productId.productImage[0] %>"
                                                alt="Product Image" class="img-fluid"
                                                style="width: 55px; height: 55px; object-fit: cover; border-radius: 5px;">
                                        </a>
                                    </td>
                                    <td class="product-name">
                                        <a href="/productDetails?id=<%= item.productId._id %>">
                                            <h2 class="h5 text-black"><%= item.productId.productName %></h2>
                                        </a>
                                    </td>
                                    <td class="product-offer">
                                        <!-- Display Offer if Available -->
                                        <% if (item.productId.productOffer) { %>
                                            <span class="text-success"><%= item.productId.productOffer %>%</span>
                                        <% } else { %>
                                            <span class="text-muted">No offer</span>
                                        <% } %>
                                    </td>
                                    <td>$<%= item.price %></td>
                                    <td>
                                        <div class="input-group mb-3 d-flex align-items-center quantity-container"
                                            style="max-width: 120px;">
                                            <div class="input-group-prepend">
                                                <button class="btn btn-outline-black decrease" type="button">&minus;</button>
                                            </div>
                                            <input type="text" name="quantity_<%= item._id %>"
                                                min="1"  value="<%= item.quantity %>"
                                                class="form-control text-center quantity-amount">
                                            <div class="input-group-append">
                                                <button class="btn btn-outline-black increase" type="button">&plus;</button>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="product-total">$<%= item.totalPrice %></td>
                                    <td>
                                        <button type="button" class="btn btn-black btn-sm"
                                            onclick="removeFromCart('<%= item.productId._id %>')">X</button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>

                <!-- Update Cart button -->
                <div class="row mb-5">
                    <!-- <div class="col-md-6 mb-3 mb-md-0">
                        <button type="submit" class="btn btn-black btn-sm btn-block">Update Cart</button>
                    </div> -->
                    <div class="col-md-6">
                        <a href="/shop" class="btn btn-outline-black btn-sm btn-block">Continue Shopping</a>
                    </div>
                </div>
            </form>

            <!-- Coupon and Cart Totals Sections -->
            <div class="row">
                <div class="col-md-6">
                    <!-- Coupon Section -->
                    <div class="row mb-5">
                        <div class="col-md-12">
                            <label class="text-black h4" for="coupon">Coupon</label>
                            <p>Enter your coupon code if you have one.</p>
                        </div>
                        <div class="col-md-8 mb-3 mb-md-0">
                            <select id="availableCoupons" class="form-control py-3">
                                <option value="">Select a Coupon

                                </option>
                                <% availableCoupons.forEach(coupon => { %>
                                    <option value="<%= coupon.name %>">
                                        <%= coupon.name %> 
                                    </option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <button type="button" class="btn btn-black" onclick="applyCoupon()">Apply Coupon</button>
                        </div>
                       
                        <div id="couponFeedback" class="col-md-6 text-right">
                            <% if (cart.couponCode) { %>
                                <strong class="text-black"><%= cart.couponCode %></strong>
                                <button class="bi bi-trash" onclick="removeCoupon()"></button>
                            <% } else { %>
                                <div>
                                    <span class="text-muted">No coupon applied</span>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 pl-5">
                    <!-- Cart Totals Section -->
                    <div class="row justify-content-end">
                        <div class="col-md-7">
                            <div class="row">
                                <div class="col-md-12 text-right border-bottom mb-5">
                                    <h3 class="text-black h4 text-uppercase">Cart Totals</h3>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <span class="text-black">Subtotal</span>
                                </div>
                                <div class="col-md-6 text-right">
                                    <strong class="text-black" id="subtotal">₹<%= cart.total.toFixed(2) %></strong>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <span class="text-black">Discount</span>
                                </div>
                                <div class="col-md-6 text-right">
                                    <strong class="text-black" id="discount">₹<%= cart.discount.toFixed(2)|| '0.00' %></strong>
                                </div>
                            </div>
                            <div class="row mb-5">
                                <div class="col-md-6">
                                    <span class="text-black">Total</span>
                                </div>
                                <div class="col-md-6 text-right">
                                    <strong class="text-black" id="finalTotal">₹<%= cart.total.toFixed(2) %></strong>
                                </div>
                            </div>
                            
                            <div class="row">
                                <div class="col-md-12">
                                    <button class="btn btn-black btn-lg py-3 btn-block"
                                        onclick="window.location='/checkout'">Proceed To Checkout</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        <% } %>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
   async function applyCoupon() {
                const couponCode = document.getElementById('availableCoupons').value.trim();
                if (!couponCode) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Please enter a coupon code',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    return;
                }

                try {
                    const response = await fetch('/apply-coupon', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ couponCode })
                    })

                    const data = await response.json();

                    if (response.ok) {
                        

                        Swal.fire({
                            title: 'Success',
                            text: `Coupon applied! Discount: $${data.discount.toFixed(2)}`,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.reload();
                        })
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: data.message || 'Failed to apply coupon.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                } catch (error) {
                    console.error('Error applying coupon:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'An error occurred while applying the coupon.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            }




    async function removeCoupon() {
        const confirmation = await Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to remove the applied coupon?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        });

        if (confirmation.isConfirmed) {
            try {
                const response = await fetch('/remove-coupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();

                if (response.ok) {
                    Swal.fire({
                        title: 'Coupon Removed!',
                        text: result.message,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: result.message || 'Failed to remove coupon.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error('Error removing coupon:', error);
                Swal.fire({
                    title: 'Error',
                    text: 'An unexpected error occurred while removing the coupon.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }
    }


    // Event listener for increasing the quantity
    document.querySelectorAll('.increase').forEach(button => {
        button.addEventListener('click', async (e) => {
            const itemId = e.target.closest('tr').dataset.itemid;
            const quantityInput = e.target.closest('tr').querySelector('input[name="quantity_' + itemId + '"]');
            let newQuantity = parseInt(quantityInput.value) + 1;
            await updateCartQuantity(itemId, newQuantity);
        });
    });

    // Event listener for decreasing the quantity
    document.querySelectorAll('.decrease').forEach(button => {
        button.addEventListener('click', async (e) => {
            const itemId = e.target.closest('tr').dataset.itemid;
            const quantityInput = e.target.closest('tr').querySelector('input[name="quantity_' + itemId + '"]');
            let newQuantity = parseInt(quantityInput.value) - 1;

            if (newQuantity < 0) return; // Prevent negative quantities

            if (newQuantity === 0) {
                // Use SweetAlert2 to ask for confirmation before removing the item
                const confirmRemoval = await Swal.fire({
                    title: 'Are you sure?',
                    text: 'The quantity is zero. Do you want to remove this item from your cart?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, remove it!',
                    cancelButtonText: 'No, keep it'
                });

                if (confirmRemoval.isConfirmed) {
                    await updateCartQuantity(itemId, 0);
                } else {
                    // Restore the original quantity if the user cancels
                    quantityInput.value = 1;
                }
            } else {
                await updateCartQuantity(itemId, newQuantity);
            }
        });
    });


// Function to update the cart via AJAX
async function updateCartQuantity(itemId, newQuantity) {
    try {
        const response = await fetch('/cart/update', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                itemId: itemId,
                newQuantity: newQuantity,
            }),
        });
        const data = await response.json();

        if (response.ok) {
            // Update the quantity input field and the total price
            const quantityInput = document.querySelector(`input[name="quantity_${itemId}"]`);
            const totalPriceCell = document.querySelector(`tr[data-itemid="${itemId}"] .product-total`);

            console.log("quantityInput:", quantityInput);
            console.log("totalPriceCell:", totalPriceCell);

            if (quantityInput) {
                quantityInput.value = newQuantity;
            }

            // Find the updated item in the cart
            const updatedItem = data.cart.items.find(item => item._id == itemId);

            if (updatedItem && totalPriceCell) {
                totalPriceCell.textContent = `$${updatedItem.totalPrice ? updatedItem.totalPrice.toFixed(2) : '0.00'}`;
            }

            // Update the discount and totals from the server response
            if (data.cart) {
                document.getElementById('subtotal').textContent = `₹${data.cart.subtotal}`;
                document.getElementById('discount').textContent = `₹${data.cart.discount.toFixed(2)}`;
                document.getElementById('finalTotal').textContent = `₹${data.cart.total}`;
            }

            // If the quantity is set to 0, remove the item row
            if (newQuantity === 0) {
                const row = document.querySelector(`tr[data-itemid="${itemId}"]`);
                if (row) row.remove();
            }

        } else {
            // Error message
            Swal.fire({
                title: 'Oops!',
                text: data.message,
                icon: 'error',
                confirmButtonText: 'Try again'
            });
        }
    } catch (error) {
        console.log('Error updating cart:', error);
        Swal.fire({
            title: 'Error!',
            text: 'There was an issue updating your cart.',
            icon: 'error',
            confirmButtonText: 'Okay'
        });
    }
}


async function removeFromCart(productId) {
        const confirmation = await Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to remove this item from your cart?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        });

        if (confirmation.isConfirmed) {
            try {
                const response = await fetch('/cart/remove', {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId })
                });

                const result = await response.json();

                if (response.ok) {
                    Swal.fire({
                        title: 'Product Removed!',
                        text: result.message,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: result.message || 'Failed to remove product from cart.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error',
                    text: 'An unexpected error occurred. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }
    }
  





</script>






<%- include("../partials/user/footer") %>
