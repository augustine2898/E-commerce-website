<%- include("../partials/user/header") %>

<div class="hero">
    <div class="container">
        <div class="row justify-content-between">
            <div class="col-lg-5">
                <div class="intro-excerpt">
                    <h1>Wishlist</h1>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="untree_co-section product-section before-footer-section">
    <div class="container">
        <div class="row">
            <!-- <div class="col-lg-12">
                <h2 class="mb-4 section-title text-center">Your Wishlist</h2>
            </div> -->
        </div>
        <% if (wishlist.length > 0) { %>
        <div class="row product__filter">
            <% for (let i = 0; i < wishlist.length; i++) { %>
                <div class="col-6 col-sm-4 col-md-3 mb-4">
                    <div class="product-card">

                        <div class="product-img-action-wrap">
                            <a href="/productDetails?id=<%= wishlist[i]._id %>">
                                <img class="product-image"
                                    src="/uploads/product-image/<%= wishlist[i].productImage[0] %>"
                                    alt="<%= wishlist[i].productName %>">
                            </a>
                        </div>

                        <div class="product-info">
                            <h3>
                                <%= wishlist[i].productName %>
                            </h3>

                            <div class="status-section">
                                <% if (wishlist[i].quantity > 0) { %>
                                    <span class="status available">Available</span>
                                <% } else { %>
                                    <span class="status out-of-stock">Out of Stock</span>
                                <% } %>
                            </div>

                            <div class="price-section">
                                <% if (wishlist[i].salePrice && wishlist[i].regularPrice > wishlist[i].salePrice) { %>
                                    <span class="original-price">₹<%= wishlist[i].regularPrice %></span>
                                    <span class="discounted-price">₹<%= wishlist[i].salePrice %></span>
                                    <span class="discount-percentage">(<%= ((wishlist[i].regularPrice -
                                        wishlist[i].salePrice) / wishlist[i].regularPrice * 100).toFixed(0) %> % OFF)</span>
                                <% } else { %>
                                    <span class="regular-price fw-bold">₹<%= wishlist[i].regularPrice %></span>
                                <% } %>
                            </div>

                            <div class="button-section">
                                <button class="cart-btn" data-product-id="<%= wishlist[i]._id %>">Add to Cart</button>
                                <button class="wishlist-btn" onclick="confirmRemove('<%= wishlist[i]._id %>')">Remove</button>
                            </div>
                        </div>
                    </div>
                </div>
            <% } %>
        </div>
        <% } else { %>
        <div class="d-flex flex-column justify-content-center align-items-center" style="height: 70vh;">
            <h1>Your Wishlist</h1>
            <p>Your Wishlist is empty.</p>
            <a href="/shop" class="btn btn-primary">Go to shopping</a>
        </div>
        <% } %>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
                document.querySelectorAll('.cart-btn').forEach(button => {
                button.addEventListener('click', async (event) => {
                    const productId = event.target.getAttribute('data-product-id');
                    const userIsLoggedIn = Boolean(<%= user ? 'true' : 'false' %>); // Check if user is logged in

                    if (!userIsLoggedIn) {
                        // Show SweetAlert to prompt login
                        Swal.fire({
                            title: 'Please Log In',
                            text: 'You must be logged in to add items to your cart.',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'Log In',
                            cancelButtonText: 'Cancel',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/login'; // Redirect to login page
                            }
                        });
                        return; // Prevent further actions if the user is not logged in
                    }

                    // Proceed with adding to cart
                    try {
                        const response = await fetch('/cart/add', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ productId, quantity: 1 }), // Default quantity is 1
                        });

                        // Handle response
                        if (response.ok) {
                            const data = await response.json();
                            if (data.message === 'Product added to cart') {
                                Swal.fire('Success', data.message, 'success');
                            } else {
                                Swal.fire('Error', 'Something went wrong. Please try again.', 'error');
                            }
                        } else {
                            const data = await response.json();
                            Swal.fire('Error', data.message || 'Failed to add product to cart. Please try again.', 'error');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        Swal.fire('Error', 'Failed to add product to cart. Please try again.', 'error');
                    }
                });
            });


            async function confirmRemove(productId) {
    console.log('Remove button clicked for product ID:', productId);

    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
    }).then((result) => {
        if (result.isConfirmed) {
            console.log('Confirmed removal of product with ID:', productId);
            // Proceed with further logic, e.g., redirect or AJAX call
            window.location.href = `/removeFromWishlist?productId=${productId}`;
        } else {
            console.log('Removal cancelled');
        }
    }).catch(error => {
        console.error('Error in Swal:', error);
    });
}


            
</script>

<%- include("../partials/user/footer") %>
<style>
    .status-section {
        margin: 10px 0;
        text-align: center;
    }

    .status {
        font-size: 14px;
        font-weight: bold;
        padding: 5px 10px;
        border-radius: 5px;
        display: inline-block;
    }

    .status.available {
        background-color: #d4edda;
        color: #155724;
    }

    .status.out-of-stock {
        background-color: #f8d7da;
        color: #721c24;
    }

    .product-card {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
    }

    .product-image {
        height: 190px;
        width: 100%;
        object-fit: cover;
    }

    .product-info {
        padding: 15px;
    }

    h3 {
        font-size: 18px;
        color: #333;
        text-align: center;
    }

    .price-section {
        margin-top: 10px;
        display: flex;
        justify-content: center;
    }

    .discounted-price {
        font-size: 16px;
        color: #d9534f;
        font-weight: bold;
    }

    .discount-percentage {
        font-weight: bold;
        color: green;
        margin-left: 10px;
    }

    .original-price {
        text-decoration: line-through;
        margin-left: 10px;
        color: #888;
    }

    .button-group {
        display: flex;
        gap: 10px;
        justify-content: space-around;
        margin-top: 15px;
    }

    .cart-btn {
        background-color: #007bff;
        color: #fff;
        padding: 8px 16px;
        font-size: 14px;
        border-radius: 5px;
        transition: background-color 0.3s;
    }

    .wishlist-btn {
        background-color: #3b5d50;
        color: #fff;
        padding: 8px 16px;
        font-size: 14px;
        border-radius: 5px;
        transition: background-color 0.3s;
    }

    .cart-btn:hover,
    .wishlist-btn:hover {
        background-color: #0056b3;
    }

    @media (max-width: 576px) {
        h3 {
            font-size: 16px;
        }

        .price-section {
            flex-direction: column;
            align-items: center;
        }
    }
</style>