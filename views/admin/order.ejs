<%- include("../../views/partials/admin/header") %>
<div class="container mt-5">
  <h2 class="text-center">Order Management</h2>

  <!-- Search and Filter Section -->
  <div class="mb-4">
    <form action="/admin/order" method="GET" class="form-inline">
      <!-- Add search/filter fields here -->
    </form>
  </div>

  <!-- Order Table -->
  <table class="table table-bordered">
    <thead>
      <tr>
        <th>Order ID</th>
        <th>Customer Name</th>
        <th>Total Price</th>
        <th>Order Status</th>
        <th>Payment Method</th>
        <th>Date</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <% orders.forEach(order => { %>
        <tr>
          <td><%= order._id %></td>
          <td><%= order.user ? order.user.name : 'N/A' %></td>
          <td>$<%= order.totalPrice.toFixed(2) %></td>
          <td>
            <span class="badge 
              <%= order.status === 'Pending' ? 'badge-pending' : 
                  order.status === 'Shipped' ? 'badge-shipped' : 
                  order.status === 'Delivered' ? 'badge-delivered' : 
                  order.status === 'Canceled' ? 'badge-canceled' : '' %>">
              <%= order.status %>
            </span>
          </td>
          <td><%= order.paymentMethod %></td>
          <td><%= new Date(order.createdOn).toLocaleDateString() %></td>
          <td>
            <div class="d-flex justify-content-start">
              <a href="/admin/orders/<%= order._id %>" class="btn btn-info btn-sm mr-2">View</a>
              <form onsubmit="confirmUpdate(event, '<%= order._id %>')" style="display:inline;">
                <select name="status" class="form-control form-control-sm" style="width: 150px;">
                  <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                  <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                  <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                  <option value="Canceled" <%= order.status === 'Canceled' ? 'selected' : '' %>>Cancel</option>
                </select>
                <button type="submit" class="btn btn-primary btn-sm mt-1">Update Status</button>
              </form>
            </div>
          </td>
        </tr>
      <% }); %>
    </tbody>
  </table>

  <!-- Pagination -->
  <div class="pagination">
    <% if (page > 1) { %>
      <a href="/admin/order?page=<%= page - 1 %>" class="btn btn-secondary btn-sm">Previous</a>
    <% } %>
    <span class="mx-2">Page <%= page %> of <%= totalPages %></span>
    <% if (page < totalPages) { %>
      <a href="/admin/order?page=<%= page + 1 %>" class="btn btn-secondary btn-sm">Next</a>
    <% } %>
  </div>
</div>

<%- include("../../views/partials/admin/footer") %>

<!-- Include SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // Confirmation prompt and update order status with SweetAlert
  async function confirmUpdate(event, orderId) {
    event.preventDefault();

    // Confirm action with SweetAlert
    const result = await Swal.fire({
      title: 'Are you sure?',
      text: "Do you want to update the order status?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, update it!'
    });

    if (result.isConfirmed) {
      // If confirmed, submit the request using fetch
      const form = event.target;
      const formData = new FormData(form);
      const status = formData.get('status');

      try {
        const response = await fetch(`/admin/orders/updateStatus/${orderId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ status })
        });

        const data = await response.json();

        // Display success or error SweetAlert based on the response
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: data.message,
            confirmButtonColor: '#3085d6',
            timer: 2000
          }).then(() => {
            location.reload(); // Reload the page or update UI as needed
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message,
            confirmButtonColor: '#d33'
          });
        }
      } catch (error) {
        console.error('Error:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An error occurred while updating order status.',
          confirmButtonColor: '#d33'
        });
      }
    }
  }
</script>

<style>
  .badge-pending {
    background-color: #f0ad4e;
    color: black;
  }
  
  .badge-shipped {
    background-color: #5bc0de;
    color: black;
  }
  
  .badge-delivered {
    background-color: #5cb85c;
    color: white;
  }
  
  .badge-canceled {
    background-color: #d9534f;
    color: white;
  }

  .d-flex {
    display: flex;
    align-items: center;
  }

  .mr-2 {
    margin-right: 0.5rem;
  }
</style>
